---
layout: post
title:  "OKKY 커리어 예시"
date:   2019-06-11 10:23
categories: 커리어
tags: web
---

<h1>개발생각-<h1>

현실은 언제나 너무 복잡합니다



그 불확실성을 탐험하고 있는 모든 분들을 응원하는 마음으로

저의 그동안의 탐험을 적습니다



1.시작

저는 비전공 학원출신 나이많은 3년차 웹개발자입니다

살다보니 어쩌다 개발자가 되고 싶어져서 무턱대고 뛰어들었습니다

다행히 좋은 회사에 입사하여 초봉 삼천대로 시작하였고 지금은 오천정도 받고 있습니다



처음 회사에 입사하고서 일은 재미있었지만

모르는 것이 많아 업무에 적응하는데 시간을 보냈습니다



그리고 반년정도 후, 스멀스멀 의문이 들기 시작합니다

회사에서의 6개월동안 학원에서만큼 개발자로서 발전을 했나? 배운게 있나?

배운게 없는 것은 아니지만 말 그대로 업무를 배운 것이지

개발을 배운 것은 아니라는 생각이 들었습니다



그리고 저는 멈추어 두었던 탐험을 다시 떠나야 겠다는 마음이 생기기 시작했습니다




2.정찰

개발뿐 아니라 모든 현실이 어려운 것은 복잡성 때문입니다

본질은 그 복잡성에 항상 가려져 있죠

정말 깊은 곳에 숨겨져 있어 찾기가 너무 어렵습니다



우리의 탐험은 일단 지도를 만드는 것부터 시작해야 합니다


일단 닥치는대로 정찰합니다

모르는 것, 궁금한 것이 있으면 다 찾아보고 알아봅니다

깊게 알아볼 필요는 없어요 그냥 대략적인 모습과 위치만 확인하면 됩니다



1) 개발에 대한, 개발자에 대한, IT업계에 대한 입문서적을 아마 10권이상 읽었습니다

2) 기술들이 너무 많은데 그게 무엇인지만 구글링/유투브영상/입문서적 으로 공부했습니다

   (자세히 공부하는 것이 아니라 정체만 파악. 정찰임무에 충실)

   ex) HTTP, AWS, 클라우드, MSA, 파이썬, 인공지능, 머신러닝, Vue.js, 서버사이드 렌더링, SEO, ...

3) 생활코딩 WEB1

   - 정말 제가 사랑하는 감동적인 컨텐츠입니다. 미래에 제 아들에게도 보여주고 싶네요

4) 에라 모르겠다 일단 가보자 세미나

5) 모각코? 스터디? 응, 일단 참석~





3.첫걸음

저는 이렇게 저만의 지도를 조금 밝히는데 1년정도 걸렸습니다

중요한 건, 지도는 직접 그려야 한다는 것입니다

그정도 되니 이제 길이 보이면서 질문이 생깁니다



이제 어디로 갈래?


사실 지금까지는 말그대로 정찰을 한 것이니 탐험 준비를 한 것이죠

이제 진짜 탐험을 떠나야 합니다...만 아직도 잘 모르겠어요

이게 맞는건지 저게 맞는건지 헷갈려요



좋은 방법이 있습니다

보이는 곳부터, 안전한 곳부터 발을 일단, 내딛어 보는 겁니다




나는 웹개발자이니 일단 웹사이트/웹어플리케이션을 만들어 보는 것이

내 탐험의 시작으로 좋을 것이라고 생각했습니다



무언가를 배우려면

첫째로, 잘 만들어 진 걸 베끼는 것이 좋고

둘째로, 직접 만들어 보는 것이 좋습니다



1) trello 사이트를 베꼈습니다

   - 프레임워크로 ASP.NET  Core + Vue.js 를 사용했습니다

   - Azure 클라우드에 배포했습니다

   - https://trellocloneapp.azurewebsites.net 

2) 내가 직접 기획한 웹사이트를 만들었습니다

   - 기본적으로 사용한 프레임워크는 이전과 동일합니다

   - https://songrecommend.azurewebsites.net/ 




4.가고 싶은 곳이 생기다

이제 간단한 웹사이트 구축은 지나온 길이 되었고

정찰하면서 대충 이렇구나~ 라고 생각만 했던 것들이

생생하게 내 손으로 체화되고 머릿속으로 들어오면서

지도가 점점 뚜렷해 지기 시작했습니다



그러면서 이전에는 안보이던 곳이 갑자기 지도에 나타났습니다



컴퓨터의 구조와 작동원리

정보통신의 원리

웹서버와 웹브라우저의 작동방식

등등...



그리고 이런 생각이 들면서 가슴이 뛰기 시작했습니다



저 곳에 진짜 가보고 싶다
저 곳이 바로 뛰어난 통찰의 원천인 것은 아닐까



이런 제 생각이 틀릴 수도 있고

개발자로서 성공하는 길이 아닐 수도 있지만

느리더라도 일단 가고 싶은 곳으로의 탐험을 시작했습니다



제가 지금 공부하고 있는 것

1) CODE - 찰스 펫졸드

2) Build a Modern Computer from First Principles: From Nand to Tetris - couresa 강의

   (영어강의라서 번역서적으로 보고있습니다ㅠ)





제 방식과 생각이 옳지도 않고 여러분에게 맞지도 않을 겁니다

단지, 이 놈은 나하고 같은 고민을 하고 있는 것 같은데 이렇게 살아가고 있네~ 하고

조금의 위로, 공감과 욕심을 부려 약간의 영감을 줄 수 있다면

저는 더 바랄 것이 없을 것 같습니다


사실 저도 회사다니면서 야근하랴 주말에는 경조사챙기랴

바쁜 와중에도 최대한 탐험을 멈추지 않으려고 발악하고 있습니다

이렇게 시간이 흘러 나중에 언젠가 깨닫는 것, 경험한 것들이 새로 생긴다면

다시 이곳에 저의 탐험을 적으러 왔으면 좋겠네요

-okky 나의 2년동안의 웹개발 탐험기 (공부과정, 커리어)-
-출처:https://okky.kr/article/589212-

Back-end
ASP.NET Core (메인 프레임워크)
SQL Server + EntityFramwork Core (데이터베이스)
JWT (사용자 인증 및 세션관리)
Swagger (API 문서 자동생성)
NLog (로그생성)
AutoMapper (객체 자동 매핑)

  Front-end
Vue.js (메인 프레임워크)
Vuetify (UI 프레임워크)
vuex (상태관리)
vue-router (클라이언트 라우팅)
axios (promise기반 http통신)
lodash (자바스크립트 유틸)
vee-validate (폼 유효성검사)
nprogress (로딩바)

  개발 상세내용
PC화면 전용. Mobile은 고려되지 않음
서버사이드렌더링(SSR) 적용하지 않음 (Asp.net Razor로 적용가능함)
패스워드는 hmacsha512로 암호화 (더 안전한 방법필요)
JWT를 쿠키에 저장함. (httpOnly, secure)
토큰관련 미들웨어 2개 생성
JWTInHeaderMiddleware: 쿠키로 넘어온 토큰을 헤더에 주입
JWTRefreshMiddleware: 토큰 만료기간 50%이내에 요청시 토큰 자동 재발급
토큰 유효성검사시 IP도 체크함. 토큰생성 IP와 다르면 권한없음
lodash의 debounce로 연속된 키입력에 의한 연속 api호출 방지
nprogress를 전역에 등록하여 라우팅, api전송시에 자동으로 로딩바 표시
